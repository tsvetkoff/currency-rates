/*
 * This file is generated by jOOQ.
 */
package tsvetkoff.currencyrates.jooq.main.public_.tables.daos;


import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import tsvetkoff.currencyrates.jooq.main.public_.tables.Currency;
import tsvetkoff.currencyrates.jooq.main.public_.tables.records.CurrencyRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CurrencyDao extends DAOImpl<CurrencyRecord, tsvetkoff.currencyrates.jooq.main.public_.tables.pojos.Currency, String> {

    /**
     * Create a new CurrencyDao without any configuration
     */
    public CurrencyDao() {
        super(Currency.CURRENCY, tsvetkoff.currencyrates.jooq.main.public_.tables.pojos.Currency.class);
    }

    /**
     * Create a new CurrencyDao with an attached configuration
     */
    public CurrencyDao(Configuration configuration) {
        super(Currency.CURRENCY, tsvetkoff.currencyrates.jooq.main.public_.tables.pojos.Currency.class, configuration);
    }

    @Override
    public String getId(tsvetkoff.currencyrates.jooq.main.public_.tables.pojos.Currency object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<tsvetkoff.currencyrates.jooq.main.public_.tables.pojos.Currency> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Currency.CURRENCY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<tsvetkoff.currencyrates.jooq.main.public_.tables.pojos.Currency> fetchById(String... values) {
        return fetch(Currency.CURRENCY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public tsvetkoff.currencyrates.jooq.main.public_.tables.pojos.Currency fetchOneById(String value) {
        return fetchOne(Currency.CURRENCY.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<tsvetkoff.currencyrates.jooq.main.public_.tables.pojos.Currency> fetchOptionalById(String value) {
        return fetchOptional(Currency.CURRENCY.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<tsvetkoff.currencyrates.jooq.main.public_.tables.pojos.Currency> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Currency.CURRENCY.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<tsvetkoff.currencyrates.jooq.main.public_.tables.pojos.Currency> fetchByName(String... values) {
        return fetch(Currency.CURRENCY.NAME, values);
    }
}
