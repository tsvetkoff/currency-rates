/*
 * This file is generated by jOOQ.
 */
package tsvetkoff.currencyrates.jooq.main.public_.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Rate implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private String bank;
    private String currency;
    private LocalDateTime date;
    private BigDecimal purchase;
    private BigDecimal sale;

    public Rate() {}

    public Rate(Rate value) {
        this.id = value.id;
        this.bank = value.bank;
        this.currency = value.currency;
        this.date = value.date;
        this.purchase = value.purchase;
        this.sale = value.sale;
    }

    public Rate(
        UUID id,
        String bank,
        String currency,
        LocalDateTime date,
        BigDecimal purchase,
        BigDecimal sale
    ) {
        this.id = id;
        this.bank = bank;
        this.currency = currency;
        this.date = date;
        this.purchase = purchase;
        this.sale = sale;
    }

    /**
     * Getter for <code>public.rate.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.rate.id</code>.
     */
    public Rate setId(UUID id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.rate.bank</code>.
     */
    public String getBank() {
        return this.bank;
    }

    /**
     * Setter for <code>public.rate.bank</code>.
     */
    public Rate setBank(String bank) {
        this.bank = bank;
        return this;
    }

    /**
     * Getter for <code>public.rate.currency</code>.
     */
    public String getCurrency() {
        return this.currency;
    }

    /**
     * Setter for <code>public.rate.currency</code>.
     */
    public Rate setCurrency(String currency) {
        this.currency = currency;
        return this;
    }

    /**
     * Getter for <code>public.rate.date</code>.
     */
    public LocalDateTime getDate() {
        return this.date;
    }

    /**
     * Setter for <code>public.rate.date</code>.
     */
    public Rate setDate(LocalDateTime date) {
        this.date = date;
        return this;
    }

    /**
     * Getter for <code>public.rate.purchase</code>.
     */
    public BigDecimal getPurchase() {
        return this.purchase;
    }

    /**
     * Setter for <code>public.rate.purchase</code>.
     */
    public Rate setPurchase(BigDecimal purchase) {
        this.purchase = purchase;
        return this;
    }

    /**
     * Getter for <code>public.rate.sale</code>.
     */
    public BigDecimal getSale() {
        return this.sale;
    }

    /**
     * Setter for <code>public.rate.sale</code>.
     */
    public Rate setSale(BigDecimal sale) {
        this.sale = sale;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Rate other = (Rate) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.bank == null) {
            if (other.bank != null)
                return false;
        }
        else if (!this.bank.equals(other.bank))
            return false;
        if (this.currency == null) {
            if (other.currency != null)
                return false;
        }
        else if (!this.currency.equals(other.currency))
            return false;
        if (this.date == null) {
            if (other.date != null)
                return false;
        }
        else if (!this.date.equals(other.date))
            return false;
        if (this.purchase == null) {
            if (other.purchase != null)
                return false;
        }
        else if (!this.purchase.equals(other.purchase))
            return false;
        if (this.sale == null) {
            if (other.sale != null)
                return false;
        }
        else if (!this.sale.equals(other.sale))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.bank == null) ? 0 : this.bank.hashCode());
        result = prime * result + ((this.currency == null) ? 0 : this.currency.hashCode());
        result = prime * result + ((this.date == null) ? 0 : this.date.hashCode());
        result = prime * result + ((this.purchase == null) ? 0 : this.purchase.hashCode());
        result = prime * result + ((this.sale == null) ? 0 : this.sale.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Rate (");

        sb.append(id);
        sb.append(", ").append(bank);
        sb.append(", ").append(currency);
        sb.append(", ").append(date);
        sb.append(", ").append(purchase);
        sb.append(", ").append(sale);

        sb.append(")");
        return sb.toString();
    }
}
